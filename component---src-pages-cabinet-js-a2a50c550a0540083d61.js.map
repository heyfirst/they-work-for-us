{"version":3,"sources":["webpack://they-work-for-us/./src/components/cabinetMemberSection/CabinetMemberList.js","webpack://they-work-for-us/./src/components/cabinetMemberSection/index.js"],"names":["CabinetMemberList","members","title","list","member","position","pos","key","id","cabinet_position","type","css","data","useStaticQuery","presidentMinistry","presidentList","people","peoplePosition","positionComparer","ministry","aPosition","a","b","memberByMinistry","peoplePostion","memberListWithImg"],"mappings":"0bAKaA,EAAoB,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACvCC,GAAO,OAAX,GAiBA,OAhBAA,aACAA,EAAOA,EAAA,KAAS,SAAAC,GAEd,IAAMC,EAAWD,EAAA,yBACP,SAAAE,GAAG,OAAIA,cAAJ,KADI,KAAjB,MAGA,OACE,qBACEC,IAAKH,EAAOI,IADd,GAGEC,iBAHF,EAIEC,KAAK,iBAMT,eACEC,IAAG,IAIH,cACEA,IAAG,GANP,IAcE,eACEA,IAAG,GAhBT,KCsFF,EAzG6B,WAC3B,IAAMC,GAAOC,oBAAb,cAiDMC,EAAN,eACMC,EAAgBH,EAAA,4BAAgC,SAAAI,GAAM,OAC1DA,EAAA,4BACE,SAAAC,GAAc,OAAIA,IAAJ,QAIZC,EAAmB,SAAAC,GAAQ,OAAI,cACnC,IAAMC,EAAYC,EAAA,4BAChB,SAAAhB,GAAQ,OAAIA,cAAJ,KAMV,OAAIe,IAJcE,EAAA,4BAChB,SAAAjB,GAAQ,OAAIA,cAAJ,MAGmB,EAEtBe,wBAAP,IAGIG,EAAmB,CACvB,CACEJ,SADF,EAEElB,QAASc,IAHY,OA7CJ,CAAC,kBAAD,2cAzBY,qBA4E/B,KAAiB,SAAAI,GAAQ,MAAK,CAC5BA,SAD4B,EAE5BlB,QAASW,EAAA,4BACC,SAAAI,GAAM,OACZA,EAAA,4BACE,SAAAQ,GAAa,OAAIA,cAAJ,QAHV,KAMDN,EANC,SAwBb,OAAO,mBAbLK,EAAA,KAAqB,YAAuC,IAApCJ,EAAoC,EAApCA,SAChBM,EADoD,EAA1BxB,QACN,KAAe,SAAAG,GAAM,wBAC1CA,EAD0C,SAG/C,OACE,WACEG,IADF,EAEEN,QAFF,EAGEC,MAAOiB","file":"component---src-pages-cabinet-js-a2a50c550a0540083d61.js","sourcesContent":["import React from \"react\"\n\nimport PeopleCard from \"../peopleCard\"\nimport { sortThaiLocale } from \"../../utils\"\n\nexport const CabinetMemberList = ({ members, title }) => {\n  let list = [...members]\n  list.sort(sortThaiLocale)\n  list = list.map(member => {\n    // keep only 'cabinet_position' of the current section title\n    const position = member.cabinet_position\n      .filter(pos => pos.indexOf(title) >= 0)\n      .join(\", \")\n    return (\n      <PeopleCard\n        key={member.id}\n        {...member}\n        cabinet_position={position}\n        type=\"cabinet\"\n      ></PeopleCard>\n    )\n  })\n\n  return (\n    <div\n      css={{\n        marginBottom: \"6rem\",\n      }}\n    >\n      <h2\n        css={{\n          textAlign: \"center\",\n          fontSize: \"3.6rem\",\n          margin: \"3rem\",\n        }}\n      >\n        {title}\n      </h2>\n      <div\n        css={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          margin: \"0 auto\",\n          justifyContent: \"center\",\n        }}\n      >\n        {list}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { CabinetMemberList } from \"./CabinetMemberList\"\n\nconst CabinetMemberSection = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allPeopleYaml(\n        filter: { is_cabinet: { eq: true }, is_active: { eq: true } }\n      ) {\n        edges {\n          node {\n            id\n            title\n            name\n            lastname\n            cabinet_position\n            party\n            party_group\n            mp_type\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const ministryList = [\n    \"รองนายกรัฐมนตรี\",\n    \"สำนักนายกรัฐมนตรี\",\n    \"กระทรวงกลาโหม\",\n    \"กระทรวงการคลัง\",\n    \"กระทรวงการต่างประเทศ\",\n    \"กระทรวงการท่องเที่ยวและกีฬา\",\n    \"กระทรวงพัฒนาสังคมและความมั่นคงของมนุษย์\",\n    \"กระทรวงการอุดมศึกษา วิทยาศาสตร์ วิจัยและนวัตกรรม\",\n    \"กระทรวงเกษตรและสหกรณ์\",\n    \"กระทรวงคมนาคม\",\n    \"กระทรวงดิจิทัลเพื่อเศรษฐกิจและสังคม\",\n    \"กระทรวงทรัพยากรธรรมชาติและสิ่งแวดล้อม\",\n    \"กระทรวงพลังงาน\",\n    \"กระทรวงพาณิชย์\",\n    \"กระทรวงมหาดไทย\",\n    \"กระทรวงยุติธรรม\",\n    \"กระทรวงแรงงาน\",\n    \"กระทรวงวัฒนธรรม\",\n    \"กระทรวงศึกษาธิการ\",\n    \"กระทรวงสาธารณสุข\",\n    \"กระทรวงอุตสาหกรรม\",\n  ]\n\n  // president need special filter\n  const presidentMinistry = \"นายกรัฐมนตรี\"\n  const presidentList = data.allPeopleYaml.edges.filter(people =>\n    people.node.cabinet_position.some(\n      peoplePosition => peoplePosition === presidentMinistry\n    )\n  )\n\n  const positionComparer = ministry => (a, b) => {\n    const aPosition = a.node.cabinet_position.find(\n      position => position.indexOf(ministry) > -1\n    )\n    const bPosition = b.node.cabinet_position.find(\n      position => position.indexOf(ministry) > -1\n    )\n\n    if (aPosition === bPosition) return -1\n\n    return aPosition.indexOf(\"ช่วย\") > -1 ? 1 : -1\n  }\n\n  const memberByMinistry = [\n    {\n      ministry: presidentMinistry,\n      members: presidentList,\n    },\n  ].concat(\n    ministryList.map(ministry => ({\n      ministry,\n      members: data.allPeopleYaml.edges\n        .filter(people =>\n          people.node.cabinet_position.some(\n            peoplePostion => peoplePostion.indexOf(ministry) > -1\n          )\n        )\n        .sort(positionComparer(ministry)),\n    }))\n  )\n\n  const renderCabinetMemberLists = () =>\n    memberByMinistry.map(({ ministry, members: memberList }) => {\n      const memberListWithImg = memberList.map(member => ({\n        ...member.node,\n      }))\n      return (\n        <CabinetMemberList\n          key={ministry}\n          members={memberListWithImg}\n          title={ministry}\n        />\n      )\n    })\n\n  return <div>{renderCabinetMemberLists()}</div>\n}\n\nexport default CabinetMemberSection\n"],"sourceRoot":""}