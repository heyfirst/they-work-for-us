{"version":3,"sources":["webpack://they-work-for-us/./src/templates/party-template.js"],"names":["cssH1","fontSize","cssSection","paddingTop","paddingBottom","h2","textAlign","cssEngTitle","margin","cssPageP","cssBarChart","props","selectedMembers","party","data","useState","memberFilter","setMemberFilter","members","e","countMembers","filter","member","tabList","id","label","count","getClass","mp_type","loadCategoryStats","gender","age","education","occupation_group","asset","keyMembers","name","keyPos","nameParts","slug","peopleSlug","lastname","position","fields","showingMembers","a","b","votelogs","joinPeopleVotelog","pageStyles","background","color","title","imageUrl","className","css","style","x","key","marginTop","marginBottom","fontFamily","fontWeight","voteLog","isCompact","tab","role","onClick","type"],"mappings":"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","file":"41123ed7-39d5f8ce3caaca1da806.js","sourcesContent":["import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { loadCategoryStats, joinPeopleVotelog, peopleSlug } from \"../utils\"\nimport StackedBarChart from \"../components/stackedBarChart\"\nimport { OfficialWebsite, InOfficeDate } from \"../components/profile\"\nimport PeopleCardMini from \"../components/peopleCardMini\"\nimport PeopleCard from \"../components/peopleCard\"\nimport VoteLogCard from \"../components/voteLogCard\"\n\nimport \"../styles/profile-book.css\"\n\nexport const query = graphql`\n  query($slug: String!, $party: String!) {\n    party: partyYaml(\n      party_type: { eq: \"พรรค\" }\n      fields: { slug: { eq: $slug } }\n    ) {\n      id\n      name\n      en {\n        name\n      }\n      short_name\n      established_date\n      dissolved_date\n      color\n      party_group\n      party_leader\n      party_secretary\n      website\n      facebook\n      twitter\n      is_active\n    }\n    allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          name\n          lastname\n          party\n          party_group\n          mp_type\n          mp_province\n          mp_zone\n          mp_list\n        }\n      }\n    }\n    mp_type: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: mp_type) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    gender: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: gender) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    education: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: education) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    occupation_group: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: occupation_group) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    age: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      edges {\n        node {\n          birthdate\n        }\n      }\n    }\n    asset: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      edges {\n        node {\n          asset\n        }\n      }\n    }\n    allVotelogYaml(\n      filter: { is_active: { eq: true } }\n      sort: { fields: vote_date, order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          is_no_vote\n          no_vote_description\n          vote_date\n        }\n      }\n    }\n    allPeopleVoteYaml {\n      edges {\n        node {\n          id\n          votelog {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssPageP = {}\n\nconst cssBarChart = {\n  margin: \"1rem 0\",\n}\n\nconst PartyPage = props => {\n  const { party, ...data } = props.data\n\n  const [memberFilter, setMemberFilter] = useState({})\n  const [members] = useState(data.allPeopleYaml.edges.map(e => e.node))\n  const selectMemberFilter = filter => () => setMemberFilter(filter)\n\n  const countMembers = filter => {\n    // filter member by mp_type\n    let selectedMembers = members.filter(\n      member => !filter.mp_type || member.mp_type === filter.mp_type\n    )\n    return selectedMembers.length\n  }\n  const getSortedMembers = () => {\n    // filter party member by mp_type\n    let selectedMembers = members.filter(\n      member => !memberFilter.mp_type || member.mp_type === memberFilter.mp_type\n    )\n    if (memberFilter.mp_type === \"บัญชีรายชื่อ\") {\n      // sort by party list\n      selectedMembers.sort((a, b) => a.mp_list - b.mp_list)\n    } else if (memberFilter.mp_type === \"แบ่งเขต\") {\n      // sort by province and zone\n      selectedMembers.sort((a, b) =>\n        a.mp_province === b.mp_province\n          ? a.mp_zone - b.mp_zone\n          : a.mp_province.localeCompare(b.mp_province, \"th\")\n      )\n    } else {\n      // sort by name and lastname\n      selectedMembers.sort((a, b) =>\n        a.name === b.name\n          ? a.lastname.localeCompare(b.lastname, \"th\")\n          : a.name.localeCompare(b.name, \"th\")\n      )\n    }\n    return selectedMembers\n  }\n\n  const tabList = [\n    {\n      id: \"ทั้งหมด\",\n      label: \"ทั้งหมด\",\n      count: countMembers({}),\n      filter: {},\n      getClass: memberFilter => (!memberFilter.mp_type ? \"active\" : \"\"),\n    },\n    {\n      id: \"บัญชีรายชื่อ\",\n      label: \"บัญชีรายชื่อ\",\n      count: countMembers({ mp_type: \"บัญชีรายชื่อ\" }),\n      filter: { mp_type: \"บัญชีรายชื่อ\" },\n      getClass: memberFilter =>\n        memberFilter.mp_type === \"บัญชีรายชื่อ\" ? \"active\" : \"\",\n    },\n    {\n      id: \"แบ่งเขต\",\n      label: \"แบ่งเขต\",\n      count: countMembers({ mp_type: \"แบ่งเขต\" }),\n      filter: { mp_type: \"แบ่งเขต\" },\n      getClass: memberFilter =>\n        memberFilter.mp_type === \"แบ่งเขต\" ? \"active\" : \"\",\n    },\n  ]\n\n  const {\n    mp_type,\n    gender,\n    age,\n    education,\n    occupation_group,\n    asset,\n  } = loadCategoryStats(data)\n\n  const keyMembers = _.compact(\n    [\n      {\n        name: \"party_leader\",\n        label: \"หัวหน้าพรรค\",\n      },\n      {\n        name: \"party_secretary\",\n        label: \"เลขาธิการพรรค\",\n      },\n    ].map((keyPos, id) => {\n      if (!party[keyPos.name]) return null\n      const nameParts = party[keyPos.name].split(\" \").slice(1)\n      const slug = peopleSlug(nameParts.join(\" \"))\n      const name = nameParts[0]\n      const lastname = nameParts.slice(1).join(\" \")\n      const position = keyPos.label\n      return { id, name, lastname, position, fields: { slug } }\n    })\n  )\n\n  const showingMembers = getSortedMembers()\n\n  const votelogs = joinPeopleVotelog(\n    data.allPeopleYaml,\n    data.allPeopleVoteYaml,\n    data.allVotelogYaml\n  )\n\n  return (\n    <Layout pageStyles={{ background: party.color }}>\n      <SEO title={`พรรค${party.name}`} imageUrl=\"/seo/share/party.png\" />\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>พรรค{party.name}</h1>\n            <h2 style={{ ...cssEngTitle }}>{party.en.name} Party</h2>\n            <h2 style={{ ...cssEngTitle }}>About</h2>\n            <p css={{ ...cssPageP }}>{party.description}</p>\n            <h2 css={{ ...cssEngTitle }}>Official Link</h2>\n            <OfficialWebsite {...party}></OfficialWebsite>\n            <h2 css={{ ...cssEngTitle }}>In Office</h2>\n            <InOfficeDate {...party}></InOfficeDate>\n            <h2 style={{ ...cssEngTitle }}>Key Members</h2>\n            {keyMembers.map(x => {\n              return (\n                <div className=\"peopleCard\" key={x.id}>\n                  <PeopleCardMini key={x.id} {...x} />\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"page\">\n            <h2\n              style={{\n                ...cssEngTitle,\n                marginTop: \"11.1rem\",\n                marginBottom: \"0rem\",\n              }}\n            >\n              Members\n            </h2>\n            <h2\n              style={{\n                ...cssEngTitle,\n                fontFamily: \"var(--ff-text)\",\n                fontWeight: \"normal\",\n              }}\n            >\n              สมาชิกสภาผู้แทนราษฎรจำนวน {data.allPeopleYaml.totalCount} คน\n            </h2>\n            <div css={{ width: \"100%\" }}>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={mp_type}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={gender}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={age}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={education}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={occupation_group}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={asset}></StackedBarChart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {votelogs.length > 0 ? (\n        <section css={{ ...cssSection, background: \"var(--cl-white)\" }}>\n          <div className=\"container\">\n            <h2 css={{ ...cssH1 }}>การลงมติล่าสุดของพรรค</h2>\n            <div\n              css={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"flex-start\",\n                flexWrap: \"wrap\",\n                marginTop: \"6rem\",\n              }}\n            >\n              {votelogs.map(({ id, fields, ...voteLog }) => (\n                <VoteLogCard\n                  isCompact\n                  key={id}\n                  css={{\n                    width: `calc((var(--container-width) - 4rem) / 2)`,\n                    margin: \"0 1rem 2rem 1rem\",\n                  }}\n                  slug={fields.slug}\n                  {...voteLog}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n      <section css={{ ...cssSection, background: \"#eeeeee\" }}>\n        <div className=\"container\">\n          <h2\n            css={{\n              fontSize: \"4.8rem\",\n              textAlign: \"center\",\n              paddingTop: \"6rem\",\n            }}\n          >\n            สมาชิกพรรคในสภา\n          </h2>\n          <ul\n            css={{\n              display: \"block\",\n              listStyle: \"none\",\n              textAlign: \"center\",\n              \"> li\": {\n                display: \"inline-block\",\n                fontSize: \"2.4rem\",\n                padding: \"1rem 0 0\",\n                margin: \"0 1rem\",\n                cursor: \"pointer\",\n                \"&.active\": {\n                  borderBottom: \"8px solid var(--cl-black)\",\n                },\n              },\n            }}\n          >\n            {tabList.map(tab => (\n              <li\n                key={tab.id}\n                className={[tab.getClass(memberFilter)].join(\" \")}\n                role=\"tab\"\n                onClick={selectMemberFilter(tab.filter)}\n              >\n                {tab.label} ({tab.count})\n              </li>\n            ))}\n          </ul>\n          {showingMembers.length > 0 ? (\n            <div\n              css={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              {showingMembers.map((member, index) => (\n                <PeopleCard key={member.id} {...member} type=\"mp\"></PeopleCard>\n              ))}\n            </div>\n          ) : (\n            <div\n              css={{\n                fontFamily: \"var(--ff-title)\",\n                fontSize: \"3.2rem\",\n                textAlign: \"center\",\n                margin: \"6rem 0\",\n              }}\n            >\n              ไม่มีสมาชิก\n            </div>\n          )}\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default PartyPage\n"],"sourceRoot":""}