{"version":3,"file":"component---src-pages-representatives-js-9c8fc3a7a6e90ece3256.js","mappings":"mNAKA,IAAMA,EAAc,CAClBC,QAAS,QACTC,QAAS,OACTC,MAAM,4CACNC,OAAQ,SACRC,EAAG,CACDC,MAAO,mBAETC,GAAI,CACFC,UAAW,OACXC,SAAU,SACVP,QAAS,QAEXQ,IAAK,CACHC,aAAc,MACdV,QAAS,eACTW,cAAe,WAhBnB,qHA+IA,IA3HuB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAClBC,GAAOC,EAAAA,EAAAA,gBAAe,cAgDtBC,EAAkB,IACtB,IAAUF,EAAKG,QAAQC,MAAMC,KAAI,qBAAGC,KAAgBC,WACpD,SAAAC,GAAI,OAAIA,EAAKC,UAGf,SAASC,EAAkBC,GACzB,OAAOT,EAAgBS,IAAc,EAIvC,IAAMC,EAAmB,SAAAC,GACvB,IAAIC,EAAUd,EAAKe,aAAaX,MAAMY,QACpC,gBAAGV,EAAH,EAAGA,KAAH,OACEA,EAAKW,cAAgBJ,GAAcH,EAAkBJ,EAAKY,SAM9D,OAJAJ,EAAQK,MAAK,cAA+B,IAAtB5B,EAAqB,EAA3Be,KAAmBc,EAAQ,EAAdd,KACrBe,EAAYX,EAAkBU,EAAEF,MAAQR,EAAkBnB,EAAE2B,MAClE,OAAqB,IAAdG,EAAkBA,EAAY9B,EAAE2B,KAAKI,cAAcF,EAAEF,KAAM,SAE7DJ,GAGHS,EAAgB,SAAC,GAAD,IAAGjB,EAAH,EAAGA,KAAH,OACpB,QAAC,EAAAkB,KAAD,CACEC,IAAKnB,EAAKY,KACVQ,GAAIpB,EAAKqB,OAAOC,KAChBC,MAAO,CACLlC,SAAU,SACVR,QAAS,OACT2C,cAAe,MACfC,aAAc,YAGhB,QAAC,IAAD,CAAWb,KAAMZ,EAAKY,QACtB,aAAGW,MAAO,CAAEvC,OAAQ,cACjBgB,EAAKY,KADR,KACgBR,EAAkBJ,EAAKY,MADvC,OAMJ,OACE,eACEc,IAAG,IAQH,eAAKA,IAAK9C,IACR,cAAI2C,MAAK,iBAAO9B,IAAhB,mBACmBC,EAAKiC,eAAeC,WADvC,SAGA,kBACGtB,EAAiB,cAAcP,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAClC,QAACiB,EAAD,CAAejB,KAAMA,UAI3B,eAAK0B,IAAK9C,IACR,cAAI2C,MAAK,iBAAO9B,IAAhB,iBACiBC,EAAKmC,gBAAgBD,WADtC,SAGA,kBACGtB,EAAiB,YAAYP,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,QAACiB,EAAD,CAAejB,KAAMA,Y,4ECtGjC,IAlCkB,SAAC,GAAc,IAAZY,EAAW,EAAXA,KACXkB,GAAgBnC,EAAAA,EAAAA,gBAAe,cAA/BmC,YAiBFC,EAAuBD,EAAYhC,MAAMkC,MAC7C,kBAA4B,gBAA5B,EAAGhC,KAAgBY,QAGfqB,EAAiBH,EAAYhC,MAAMkC,MACvC,qBAAGhC,KAAgBY,OAASA,KAG9B,OACE,QAAC,EAAAsB,EAAD,CACEC,OAAOC,EAAAA,EAAAA,IAAUH,GAAkBF,GAAsB/B,MACzDqC,IAAKzB,M,4ECOX,IApCqB,SAAC,GAAoC,IAAD,IAAjC0B,MAAAA,OAAiC,MAAzB,GAAyB,EAArB1B,EAAqB,EAArBA,KAAM2B,EAAe,EAAfA,SAChCC,GAAiB7C,EAAAA,EAAAA,gBAAe,cAAhC6C,aAiBFH,EAAMC,EAAWA,EAAN,IAAe1B,EAAf,IAAuB2B,EAAgB3B,EAAvC,IAA+C2B,EAE1DR,EAAuBS,EAAa1C,MAAMkC,MAC9C,kBAA4B,gBAA5B,EAAGhC,KAAgBY,QAGf6B,EAAkBD,EAAa1C,MAAMkC,MACzC,qBAAGhC,KAAgBY,OAAYA,EAAjB,IAAyB2B,KAGzC,OACE,QAAC,EAAAL,EAAD,CACEC,OAAOC,EAAAA,EAAAA,IAAUK,GAAmBV,GAAsB/B,MAC1DqC,IAAKA,M,4NC9BX,2TA0DA,IA3CuB,SAAAK,GACrB,IAAMC,EAhBO,SAAAD,GAAK,OAClB,eACEhB,IAAG,IASH,QAAC,EAAAR,KAAD,CAAME,GAAIsB,EAAMrB,OAAOC,MAAUoB,EAAM9B,KAAvC,IAA+C8B,EAAMH,WAKpCK,CAAOF,GAE1B,OACE,eACEvB,IAAKuB,EAAMG,GACXC,UAAWJ,EAAMI,UACjBpB,IAAG,IAOH,eAAKH,MAAO,CAAEE,aAAc,OAAQsB,WAAY,WAC7CL,EAAMM,WAET,oBACE,QAAC,EAAA9B,KAAD,CAAME,GAAIsB,EAAMrB,OAAOC,OACrB,eACEwB,UAAU,kBACVpB,IAAG,IAaH,QAAC,IAAiBgB,OAIxB,eAAKnB,MAAO,CAAE0B,UAAW,SAAWN,M,sNCtCnC,IA6GDO,EAAQ,CACZ7D,SAAU,QAGN8D,EAAa,CACjBC,WAAY,OACZC,cAAe,OACfC,GAAI,CACFjE,SAAU,SACVD,UAAW,WAITmE,EAAc,CAClBlE,SAAU,SACVD,UAAW,OACXJ,OAAQ,qBAGJwE,EAAW,GAEXC,EAAc,CAClBzE,OAAQ,UADV,0OAgLA,UA5K4B,SAAA0D,GAC1B,MAA2BA,EAAMhD,KAAzBgE,EAAR,EAAQA,MAAUhE,GAAlB,YAEA,GAOIiE,EAAAA,EAAAA,IAAkBjE,GANpBkE,EADF,EACEA,QACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,IACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,iBACAC,EANF,EAMEA,MAGIC,EAAa,IACjB,CACE,CACEtD,KAAM,UACNuD,MAAO,aAET,CACEvD,KAAM,uBACNuD,MAAO,wBAET,CACEvD,KAAM,wBACNuD,MAAO,wBAET,CACEvD,KAAM,oBACNuD,MAAO,kBAETpE,KAAI,SAACqE,EAAQvB,GACb,IAAKa,EAAMU,EAAOxD,MAAO,OAAO,KAChC,IAAMyD,EAAYX,EAAMU,EAAOxD,MAAM0D,MAAM,KAAKC,MAAM,GAChDjD,GAAOkD,EAAAA,EAAAA,IAAWH,EAAUI,KAAK,MAIvC,MAAO,CAAE5B,GAAAA,EAAIjC,KAHAyD,EAAU,GAGJ9B,SAFF8B,EAAUE,MAAM,GAAGE,KAAK,KAEZzB,SADZoB,EAAOD,MACe9C,OAAQ,CAAEC,KAAAA,QAI/CoD,GAAWC,EAAAA,EAAAA,IACfjF,EAAKkF,cACLlF,EAAKmF,kBACLnF,EAAKoF,gBAGP,OACE,QAAC,IAAD,CAAQC,WAAY,CAAEC,WAAY,aAChC,QAAC,IAAD,CAAK1C,MAAM,6BACX,mBAASQ,UAAU,YACjB,eAAKA,UAAU,SACb,eAAKA,UAAU,kBACb,cAAIpB,KAAG,yBAAOwB,EAAP,CAAclE,OAAQ,eAAtB,QACJ0E,EAAM9C,KADT,WACuB8C,EAAMuB,gBAE7B,cAAI1D,MAAK,iBAAOgC,KACd,gBACE2B,wBAAyB,CACvBC,QAAQC,EAAAA,EAAAA,IAAoB1B,EAAMuB,kBAEnC,IALL,4BAQA,cAAI1D,MAAK,iBAAOgC,IAAhB,UACA,aAAG7B,KAAG,yBAAO8B,GAAP,QAAoBE,EAAM2B,cAChC,cAAI3D,KAAG,yBAAO6B,GAAP,QAAP,kBACA,QAAC,IAAoBG,IACrB,cAAIhC,KAAG,yBAAO6B,GAAP,QAAP,cACA,QAAC,IAAiBG,IAClB,cAAInC,MAAK,iBAAOgC,IAAhB,eACCW,EAAWnE,KAAI,SAAAuF,GACd,OACE,eAAKxC,UAAU,aAAa3B,IAAKmE,EAAEzC,KACjC,QAAC,KAAD,QAAgB1B,IAAKmE,EAAEzC,IAAQyC,UAKvC,eAAKxC,UAAU,SACb,cACEvB,MAAK,iBACAgC,EADA,CAEHN,UAAW,UACXxB,aAAc,UAJlB,YASA,cACEF,MAAK,iBACAgC,EADA,CAEHgC,WAAY,iBACZxC,WAAY,YAJhB,6BAO6BrD,EAAKkF,cAAchD,WAPhD,QASA,eAAKF,IAAG,IACN,eAAKH,MAAK,iBAAOkC,KACf,QAAC,IAAD,CAAiB/D,KAAMkE,MAEzB,eAAKrC,MAAK,iBAAOkC,KACf,QAAC,IAAD,CAAiB/D,KAAMmE,MAEzB,eAAKtC,MAAK,iBAAOkC,KACf,QAAC,IAAD,CAAiB/D,KAAMoE,MAEzB,eAAKvC,MAAK,iBAAOkC,KACf,QAAC,IAAD,CAAiB/D,KAAMqE,MAEzB,eAAKxC,MAAK,iBAAOkC,KACf,QAAC,IAAD,CAAiB/D,KAAMsE,MAEzB,eAAKzC,MAAK,iBAAOkC,KACf,QAAC,IAAD,CAAiB/D,KAAMuE,SAOhCS,EAASvE,OAAS,GACjB,mBAASuB,KAAG,yBAAOyB,EAAP,CAAmB6B,WAAY,oBAA/B,SACV,eAAKlC,UAAU,cACb,cAAIpB,KAAG,yBAAOwB,GAAP,QAAP,oCACA,eACExB,IAAG,GAQFgD,EAAS3E,KAAI,gBAAG8C,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,OAAWmE,GAAlB,mBACZ,QAAC,KAAD,QACEC,WAAS,EACTtE,IAAK0B,EACLnB,KAAG,QAAE,CACH3C,MAAM,4CACNC,OAAQ,oBAFP,OAIHsC,KAAMD,EAAOC,MACTkE,UAMZ,MAEJ,mBAAS9D,KAAG,yBAAOyB,EAAP,CAAmB6B,WAAY,YAA/B,SACV,eAAKlC,UAAU,cACb,oBACE,cACEpB,IAAG,GADL,yBASA,QAAC,IAAD,Y,iBCzSZgE,EAAOC,QAXP,SAAyBC,EAAOC,EAAQC,EAAUC,GAIhD,IAHA,IAAIC,GAAS,EACT7F,EAAkB,MAATyF,EAAgB,EAAIA,EAAMzF,SAE9B6F,EAAQ7F,GAAQ,CACvB,IAAI8F,EAAQL,EAAMI,GAClBH,EAAOE,EAAaE,EAAOH,EAASG,GAAQL,GAE9C,OAAOG,I,qBClBT,IAAIG,EAAW,EAAQ,MAoBvBR,EAAOC,QAPP,SAAwBQ,EAAYN,EAAQC,EAAUC,GAIpD,OAHAG,EAASC,GAAY,SAASF,EAAO9E,EAAKgF,GACxCN,EAAOE,EAAaE,EAAOH,EAASG,GAAQE,MAEvCJ,I,qBCjBT,IAAIK,EAAiB,EAAQ,MAwB7BV,EAAOC,QAbP,SAAyBU,EAAQlF,EAAK8E,GACzB,aAAP9E,GAAsBiF,EACxBA,EAAeC,EAAQlF,EAAK,CAC1B,cAAgB,EAChB,YAAc,EACd,MAAS8E,EACT,UAAY,IAGdI,EAAOlF,GAAO8E,I,qBCpBlB,IAAIK,EAAkB,EAAQ,MAC1BC,EAAiB,EAAQ,MACzBC,EAAe,EAAQ,MACvBC,EAAU,EAAQ,MAmBtBf,EAAOC,QATP,SAA0BE,EAAQa,GAChC,OAAO,SAASP,EAAYL,GAC1B,IAAIa,EAAOF,EAAQN,GAAcG,EAAkBC,EAC/CR,EAAcW,EAAcA,IAAgB,GAEhD,OAAOC,EAAKR,EAAYN,EAAQW,EAAaV,EAAU,GAAIC,M,qBClB/D,IAAIa,EAAY,EAAQ,KAEpBR,EAAkB,WACpB,IACE,IAAIO,EAAOC,EAAUC,OAAQ,kBAE7B,OADAF,EAAK,GAAI,GAAI,IACNA,EACP,MAAOG,KALU,GAQrBpB,EAAOC,QAAUS,G,qBCVjB,IAAIW,EAAkB,EAAQ,MAC1BC,EAAmB,EAAQ,MAM3BC,EAHcJ,OAAOK,UAGQD,eAyB7BE,EAAUH,GAAiB,SAASI,EAAQnB,EAAO9E,GACjD8F,EAAeI,KAAKD,EAAQjG,GAC9BiG,EAAOjG,GAAKmG,KAAKrB,GAEjBc,EAAgBK,EAAQjG,EAAK,CAAC8E,OAIlCP,EAAOC,QAAUwB,G,qBCxCjB,IAAIJ,EAAkB,EAAQ,MAC1BQ,EAAa,EAAQ,MACrBf,EAAe,EAAQ,MAwC3Bd,EAAOC,QAVP,SAAmBU,EAAQP,GACzB,IAAIsB,EAAS,GAMb,OALAtB,EAAWU,EAAaV,EAAU,GAElCyB,EAAWlB,GAAQ,SAASJ,EAAO9E,EAAKkF,GACtCU,EAAgBK,EAAQjG,EAAK2E,EAASG,EAAO9E,EAAKkF,OAE7Ce,I,kCCvCM,SAASI,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEItG,EAAKwG,EAFLC,EAAS,GACTC,EAAahB,OAAOiB,KAAKL,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAW1H,OAAQwH,IACjCxG,EAAM0G,EAAWF,GACbD,EAASK,QAAQ5G,IAAQ,IAC7ByG,EAAOzG,GAAOsG,EAAOtG,IAGvB,OAAOyG,E","sources":["webpack://they-work-for-us/./src/components/partyGroupList.js","webpack://they-work-for-us/./src/components/partyLogo.js","webpack://they-work-for-us/./src/components/peopleAvatar.js","webpack://they-work-for-us/./src/components/peopleCardMini.js","webpack://they-work-for-us/./src/pages/representatives.js","webpack://they-work-for-us/./node_modules/lodash/_arrayAggregator.js","webpack://they-work-for-us/./node_modules/lodash/_baseAggregator.js","webpack://they-work-for-us/./node_modules/lodash/_baseAssignValue.js","webpack://they-work-for-us/./node_modules/lodash/_createAggregator.js","webpack://they-work-for-us/./node_modules/lodash/_defineProperty.js","webpack://they-work-for-us/./node_modules/lodash/groupBy.js","webpack://they-work-for-us/./node_modules/lodash/mapValues.js","webpack://they-work-for-us/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport _ from \"lodash\"\nimport PartyLogo from \"./partyLogo\"\n\nconst cssMPColumn = {\n  display: \"block\",\n  padding: \"2rem\",\n  width: `calc((var(--container-width) - 4rem) / 2)`,\n  margin: \"0 1rem\",\n  a: {\n    color: \"var(--cl-black)\",\n  },\n  h3: {\n    textAlign: \"left\",\n    fontSize: \"3.2rem\",\n    padding: \"2rem\",\n  },\n  img: {\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n  },\n}\n\nconst PartyGroupList = ({ paneHeaderStyle }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      partyCoalition: allPeopleYaml(\n        filter: {\n          party_group: { eq: \"ร่วมรัฐบาล\" }\n          is_mp: { eq: true }\n          is_active: { eq: true }\n        }\n      ) {\n        totalCount\n      }\n      partyOpposition: allPeopleYaml(\n        filter: {\n          party_group: { eq: \"ฝ่ายค้าน\" }\n          is_mp: { eq: true }\n          is_active: { eq: true }\n        }\n      ) {\n        totalCount\n      }\n      mpParty: allPeopleYaml(\n        filter: { is_mp: { eq: true }, is_active: { eq: true } }\n      ) {\n        edges {\n          node {\n            party\n          }\n        }\n      }\n      allPartyYaml(\n        filter: { party_type: { eq: \"พรรค\" }, is_active: { eq: true } }\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            fields {\n              slug\n            }\n            name\n            party_group\n          }\n        }\n      }\n    }\n  `)\n\n  // Get active member count of each party\n  const activeMpByParty = _.mapValues(\n    _.groupBy(data.mpParty.edges.map(({ node }) => node.party)),\n    list => list.length\n  )\n\n  function totalActiveMember(partyName) {\n    return activeMpByParty[partyName] || 0\n  }\n\n  // sort by more members first, then alphabetically\n  const getSortedParties = partyGroup => {\n    let members = data.allPartyYaml.edges.filter(\n      ({ node }) =>\n        node.party_group === partyGroup && totalActiveMember(node.name)\n    )\n    members.sort(({ node: a }, { node: b }) => {\n      const totalDiff = totalActiveMember(b.name) - totalActiveMember(a.name)\n      return totalDiff !== 0 ? totalDiff : a.name.localeCompare(b.name, \"th\")\n    })\n    return members\n  }\n\n  const PartyListItem = ({ node }) => (\n    <Link\n      key={node.name}\n      to={node.fields.slug}\n      style={{\n        fontSize: \"2.2rem\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginBottom: \"0.5rem\",\n      }}\n    >\n      <PartyLogo name={node.name} />\n      <p style={{ margin: \"auto 10px\" }}>\n        {node.name} ({totalActiveMember(node.name)})\n      </p>\n    </Link>\n  )\n\n  return (\n    <div\n      css={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexWrap: \"wrap\",\n        marginTop: \"2rem\",\n      }}\n    >\n      <div css={cssMPColumn}>\n        <h3 style={{ ...paneHeaderStyle }}>\n          พรรคร่วมรัฐบาล ({data.partyCoalition.totalCount} คน)\n        </h3>\n        <ul>\n          {getSortedParties(\"ร่วมรัฐบาล\").map(({ node }) => (\n            <PartyListItem node={node} />\n          ))}\n        </ul>\n      </div>\n      <div css={cssMPColumn}>\n        <h3 style={{ ...paneHeaderStyle }}>\n          พรรคฝ่ายค้าน ({data.partyOpposition.totalCount} คน)\n        </h3>\n        <ul>\n          {getSortedParties(\"ฝ่ายค้าน\").map(({ node }) => (\n            <PartyListItem node={node} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default PartyGroupList\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst PartyLogo = ({ name }) => {\n  const { partyImages } = useStaticQuery(graphql`\n    query {\n      partyImages: allFile(\n        filter: { relativeDirectory: { eq: \"images/party\" } }\n      ) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              gatsbyImageData(width: 45)\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const placeHolderImageNode = partyImages.edges.find(\n    ({ node }) => node.name === \"placeholder\"\n  )\n\n  const partyImageNode = partyImages.edges.find(\n    ({ node }) => node.name === name\n  )\n\n  return (\n    <GatsbyImage\n      image={getImage((partyImageNode || placeHolderImageNode).node)}\n      alt={name}\n    />\n  )\n}\n\nexport default PartyLogo\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst PeopleAvatar = ({ title = \"\", name, lastname }) => {\n  const { peopleImages } = useStaticQuery(graphql`\n    query {\n      peopleImages: allFile(\n        filter: { relativeDirectory: { eq: \"images/people\" } }\n      ) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              gatsbyImageData(width: 160)\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const alt = title ? `${title} ${name} ${lastname}` : `${name} ${lastname}`\n\n  const placeHolderImageNode = peopleImages.edges.find(\n    ({ node }) => node.name === \"placeholder\"\n  )\n\n  const personImageNode = peopleImages.edges.find(\n    ({ node }) => node.name === `${name}-${lastname}`\n  )\n\n  return (\n    <GatsbyImage\n      image={getImage((personImageNode || placeHolderImageNode).node)}\n      alt={alt}\n    />\n  )\n}\n\nexport default PeopleAvatar\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport PeopleAvatar from \"./peopleAvatar\"\n\nconst MPInfo = props => (\n  <div\n    css={{\n      fontFamily: \"var(--ff-text)\",\n      fontWeight: \"bold\",\n      fontSize: \"1.6rem\",\n      a: { color: \"inherit\" },\n      verticalAlign: \"center\",\n      height: \"100%\",\n    }}\n  >\n    <Link to={props.fields.slug}>{`${props.name} ${props.lastname}`}</Link>\n  </div>\n)\n\nconst PeopleCardMini = props => {\n  const peopleInfo = MPInfo(props)\n\n  return (\n    <div\n      key={props.id}\n      className={props.className}\n      css={{\n        display: \"block\",\n        flex: \"1 1 360px\",\n        fontSize: \"1.8rem\",\n        marginBottom: \"2rem\",\n      }}\n    >\n      <div style={{ marginBottom: \"1rem\", fontWeight: \"medium\" }}>\n        {props.position}\n      </div>\n      <div>\n        <Link to={props.fields.slug}>\n          <div\n            className=\"profile-picture\"\n            css={{\n              borderRadius: 84,\n              width: 41,\n              height: 41,\n              float: \"left\",\n              marginBottom: 0,\n              marginRight: \"1rem\",\n              border: \"2px solid var(--cl-black)\",\n              background: \"var(--cl-gray-2) no-repeat\",\n              backgroundSize: \"cover\",\n              overflow: \"hidden\",\n            }}\n          >\n            <PeopleAvatar {...props} />\n          </div>\n        </Link>\n      </div>\n      <div style={{ marginTop: \"2rem\" }}>{peopleInfo}</div>\n    </div>\n  )\n}\n\nexport default PeopleCardMini\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {\n  loadCategoryStats,\n  joinPeopleVotelog,\n  peopleSlug,\n  formatOrdinalNumber,\n} from \"../utils\"\nimport StackedBarChart from \"../components/stackedBarChart\"\nimport { OfficialWebsite, InOfficeDate } from \"../components/profile\"\nimport PeopleCardMini from \"../components/peopleCardMini\"\nimport PartyGroupList from \"../components/partyGroupList\"\nimport VoteLogCard from \"../components/voteLogCard\"\n\nimport \"../styles/profile-book.css\"\n\nexport const query = graphql`\n  query {\n    house: partyYaml(party_type: { eq: \"สส\" }, is_active: { eq: true }) {\n      name\n      party_ordinal\n      description\n      established_date\n      dissolved_date\n      speaker\n      first_deputy_speaker\n      second_deputy_speaker\n      opposition_leader\n      website\n      facebook\n      twitter\n      is_active\n    }\n    allPeopleYaml(filter: { is_mp: { eq: true }, is_active: { eq: true } }) {\n      totalCount\n      edges {\n        node {\n          id\n        }\n      }\n    }\n    mp_type: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: mp_type) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    gender: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: gender) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    education: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: education) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    occupation_group: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: occupation_group) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    age: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          birthdate\n        }\n      }\n    }\n    asset: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          asset\n        }\n      }\n    }\n    allVotelogYaml(\n      filter: { is_active: { eq: true } }\n      sort: { fields: vote_date, order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          is_no_vote\n          no_vote_description\n          vote_date\n        }\n      }\n    }\n    allPeopleVoteYaml {\n      edges {\n        node {\n          id\n          votelog {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssPageP = {}\n\nconst cssBarChart = {\n  margin: \"1rem 0\",\n}\n\nconst RepresentativesPage = props => {\n  const { house, ...data } = props.data\n\n  const {\n    mp_type,\n    gender,\n    age,\n    education,\n    occupation_group,\n    asset,\n  } = loadCategoryStats(data)\n\n  const keyMembers = _.compact(\n    [\n      {\n        name: \"speaker\",\n        label: \"ประธานสภา\",\n      },\n      {\n        name: \"first_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 1\",\n      },\n      {\n        name: \"second_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 2\",\n      },\n      {\n        name: \"opposition_leader\",\n        label: \"ผู้นำฝ่ายค้าน\",\n      },\n    ].map((keyPos, id) => {\n      if (!house[keyPos.name]) return null\n      const nameParts = house[keyPos.name].split(\" \").slice(1)\n      const slug = peopleSlug(nameParts.join(\" \"))\n      const name = nameParts[0]\n      const lastname = nameParts.slice(1).join(\" \")\n      const position = keyPos.label\n      return { id, name, lastname, position, fields: { slug } }\n    })\n  )\n\n  const votelogs = joinPeopleVotelog(\n    data.allPeopleYaml,\n    data.allPeopleVoteYaml,\n    data.allVotelogYaml\n  )\n\n  return (\n    <Layout pageStyles={{ background: \"#eeeeee\" }}>\n      <SEO title=\"สมาชิกสภาผู้แทนราษฎรไทย\" />\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>\n              {house.name} ชุดที่ {house.party_ordinal}\n            </h1>\n            <h2 style={{ ...cssEngTitle }}>\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: formatOrdinalNumber(house.party_ordinal),\n                }}\n              />{\" \"}\n              House of Representative\n            </h2>\n            <h2 style={{ ...cssEngTitle }}>About</h2>\n            <p css={{ ...cssPageP }}>{house.description}</p>\n            <h2 css={{ ...cssEngTitle }}>Official Link</h2>\n            <OfficialWebsite {...house}></OfficialWebsite>\n            <h2 css={{ ...cssEngTitle }}>In Office</h2>\n            <InOfficeDate {...house}></InOfficeDate>\n            <h2 style={{ ...cssEngTitle }}>Key Members</h2>\n            {keyMembers.map(x => {\n              return (\n                <div className=\"peopleCard\" key={x.id}>\n                  <PeopleCardMini key={x.id} {...x} />\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"page\">\n            <h2\n              style={{\n                ...cssEngTitle,\n                marginTop: \"11.1rem\",\n                marginBottom: \"0rem\",\n              }}\n            >\n              Members\n            </h2>\n            <h2\n              style={{\n                ...cssEngTitle,\n                fontFamily: \"var(--ff-text)\",\n                fontWeight: \"normal\",\n              }}\n            >\n              สมาชิกสภาผู้แทนราษฏรจำนวน {data.allPeopleYaml.totalCount} คน\n            </h2>\n            <div css={{ width: \"100%\" }}>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={mp_type}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={gender}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={age}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={education}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={occupation_group}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={asset}></StackedBarChart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {votelogs.length > 0 ? (\n        <section css={{ ...cssSection, background: \"var(--cl-white)\" }}>\n          <div className=\"container\">\n            <h2 css={{ ...cssH1 }}>การลงมติล่าสุดของสภาผู้แทนราษฎร</h2>\n            <div\n              css={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"flex-start\",\n                flexWrap: \"wrap\",\n                marginTop: \"6rem\",\n              }}\n            >\n              {votelogs.map(({ id, fields, ...voteLog }) => (\n                <VoteLogCard\n                  isCompact\n                  key={id}\n                  css={{\n                    width: `calc((var(--container-width) - 4rem) / 2)`,\n                    margin: \"0 1rem 2rem 1rem\",\n                  }}\n                  slug={fields.slug}\n                  {...voteLog}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n\n      <section css={{ ...cssSection, background: \"#eeeeee\" }}>\n        <div className=\"container\">\n          <div>\n            <h3\n              css={{\n                fontSize: \"4.5rem\",\n                textAlign: \"center\",\n                marginTop: \"4rem\",\n              }}\n            >\n              สำรวจตามพรรคการเมือง\n            </h3>\n            <PartyGroupList />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default RepresentativesPage\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["cssMPColumn","display","padding","width","margin","a","color","h3","textAlign","fontSize","img","borderRadius","verticalAlign","paneHeaderStyle","data","useStaticQuery","activeMpByParty","mpParty","edges","map","node","party","list","length","totalActiveMember","partyName","getSortedParties","partyGroup","members","allPartyYaml","filter","party_group","name","sort","b","totalDiff","localeCompare","PartyListItem","Link","key","to","fields","slug","style","flexDirection","marginBottom","css","partyCoalition","totalCount","partyOpposition","partyImages","placeHolderImageNode","find","partyImageNode","G","image","getImage","alt","title","lastname","peopleImages","personImageNode","props","peopleInfo","MPInfo","id","className","fontWeight","position","marginTop","cssH1","cssSection","paddingTop","paddingBottom","h2","cssEngTitle","cssPageP","cssBarChart","house","loadCategoryStats","mp_type","gender","age","education","occupation_group","asset","keyMembers","label","keyPos","nameParts","split","slice","peopleSlug","join","votelogs","joinPeopleVotelog","allPeopleYaml","allPeopleVoteYaml","allVotelogYaml","pageStyles","background","party_ordinal","dangerouslySetInnerHTML","__html","formatOrdinalNumber","description","x","fontFamily","voteLog","isCompact","module","exports","array","setter","iteratee","accumulator","index","value","baseEach","collection","defineProperty","object","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","func","getNative","Object","e","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","result","call","push","baseForOwn","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","keys","indexOf"],"sourceRoot":""}