{"version":3,"sources":["webpack://they-work-for-us/./src/templates/votelog-list-template.js"],"names":["paginationStyle","color","fontSize","fontWeight","textDecoration","margin","VoteLogWrapper","votelogs","data","css","id","fields","voteLog","key","slug","allVotelogYaml","voteRecordImage","pageContext","updateImage","currentPage","numPages","title","imageUrl","className","image","path","to","marginTop","Array","length","pageNumber","i"],"mappings":"yOASO,IA2CDA,EAAkB,CACtBC,MADsB,kBAEtBC,SAFsB,SAGtBC,WAHsB,OAItBC,eAJsB,OAKtBC,OALsB,yBAMtB,UAAW,CACTD,eAAgB,S,qHAIdE,EAAiB,SAAAC,GACrB,IAAQC,EAASD,EAAjB,KACA,OACE,eACEE,IAAG,GAQFD,EAAA,KAAS,yBAAWE,EAAX,KAAeC,EAAf,SAA0BC,GAA1B,iCACR,qBACEC,IADF,EAEEJ,KAAG,gGAIHK,KAAMH,EAAOG,MAPP,S,yfA6JhB,UA9IoB,SAAC,GAGf,QAFJN,KAAQO,EAEJ,EAFIA,eAAgBC,EAEpB,EAFoBA,gBACxBC,GACI,EAFqCC,YAErC,EADJD,aAEQE,EAA0BF,EAAlC,YAAqBG,EAAaH,EAAlC,SACMV,EAAWQ,EAAjB,MAEA,OACE,kBACE,aACEM,MADF,6BAEEC,SAAS,4BAEX,mBACEb,IAAG,IAOH,eAAKc,UAAU,cACb,oBACE,aACEC,MAAOR,kBADT,gBAEEP,IAAG,MAGP,cACEA,IAAG,GARP,+BAgBE,aAAGA,IAAG,GA7BZ,mXAwCE,wBACE,eAAKc,UAAU,cACb,cACEd,IAAG,GAFP,yBAUE,sBACGF,GACC,WACEkB,KAAMN,iBADR,oBAEEX,KAAMD,IAvDlB,OA+DE,mBAASE,IAAG,IACV,eAAKc,UAAU,cACb,eACEd,IAAG,GAMFU,OACC,gBACEO,GAAE,YACAP,oBAAsCA,EAF1C,IAIEV,KAAG,4BAEDkB,UAAW,SAFV,cALNR,KAPH,GAsBGS,MAAA,KAAW,CAAEC,OAAQT,IAAY,cAChC,IAAMU,EAAaC,EAAnB,EACA,OAAID,IAAJ,GAEI,gBACEjB,IAAG,eADL,EAEEJ,KAAG,4BAEDL,eAAgB,cAFf,cAHP,IAaA,gBACES,IAAG,eADL,EAEEa,GAAE,YACAI,kBAHJ,GAKErB,IAAKT,GANT,MAYDmB,OACC,gBACEO,GAAE,kBAAsBP,EAD1B,GAEEV,KAAG,4BAEDkB,UAAW,SAFV,cAHNR,KAnHX","file":"5a33222f-ba9acfb11c6dc22fb438.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport VoteLogCard from \"../components/voteLogCard\"\nimport { Router } from \"@reach/router\"\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allVotelogYaml(\n      filter: { is_active: { eq: true } }\n      limit: $limit\n      skip: $skip\n      sort: { fields: vote_date, order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          is_no_vote\n          no_vote_description\n          approve\n          disprove\n          abstained\n          absent\n          vote_date\n        }\n      }\n    }\n    voteRecordImage: file(\n      relativePath: { eq: \"images/icons/votelog/votelog-white.png\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(width: 48, layout: FIXED)\n      }\n    }\n    updateImage: file(relativePath: { eq: \"images/icons/update/update.png\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 17, layout: FIXED)\n      }\n    }\n  }\n`\n\nconst paginationStyle = {\n  color: \"var(--cl-black)\",\n  fontSize: \"2.2rem\",\n  fontWeight: \"bold\",\n  textDecoration: \"none\",\n  margin: \"0.2rem 0.3rem 0 0.3rem\",\n  \"&:hover\": {\n    textDecoration: \"none\",\n  },\n}\n\nconst VoteLogWrapper = votelogs => {\n  const { data } = votelogs\n  return (\n    <div\n      css={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexWrap: \"wrap\",\n        marginTop: \"6rem\",\n      }}\n    >\n      {data.map(({ node: { id, fields, ...voteLog } }) => (\n        <VoteLogCard\n          key={id}\n          css={{\n            width: `calc((var(--container-width) - 4rem) / 2)`,\n            margin: \"0 1rem 2rem 1rem\",\n          }}\n          slug={fields.slug}\n          {...voteLog}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst VoteLogPage = ({\n  data: { allVotelogYaml, voteRecordImage, updateImage },\n  pageContext,\n}) => {\n  const { currentPage, numPages } = pageContext\n  const votelogs = allVotelogYaml.edges\n\n  return (\n    <Layout>\n      <SEO\n        title=\"บันทึกการประชุมและการลงมติ\"\n        imageUrl=\"/seo/share/votelog.png\"\n      />\n      <section\n        css={{\n          backgroundColor: \"#222222\",\n          padding: \"8rem 0 4rem 0\",\n          color: \"--cl-white\",\n          textAlign: \"center\",\n        }}\n      >\n        <div className=\"container\">\n          <div>\n            <GatsbyImage\n              image={voteRecordImage.childImageSharp.gatsbyImageData}\n              css={{ width: \"48px\", margin: \"auto\" }}\n            />\n          </div>\n          <h1\n            css={{\n              color: \"var(--cl-white)\",\n              textAlign: \"center\",\n              fontSize: \"4.8rem\",\n            }}\n          >\n            บันทึกการประชุมและการลงมติ\n          </h1>\n          <p css={{ padding: \"0 8rem\", color: \"#eeeeee\" }}>\n            นับตั้งแต่เปิดประชุมสภาหลังการเลือกตั้ง\n            มีการประชุมสภามาแล้วหลายต่อหลายครั้ง แต่ละครั้งก็มีหลายวาระ\n            และใช้ระยะเวลาในการประชุมยาวนาน\n            จนบางทีเราก็ตามไม่ทันว่ามีการลงมติครั้งสำคัญเกิดขึ้นในการประชุมครั้งไหนในสภาบ้าง?\n            ใครยกมือสนับสนุนหรือคัดค้านมติไหน?\n            เราจึงรวบรวบการลงมติครั้งสำคัญมาให้ พร้อมอธิบายสรุปแบบเข้าใจง่ายๆ\n            ว่าสิ่งที่ผู้แทนแต่ละคนสนับสนุนหรือคัดค้านคืออะไร\n          </p>\n        </div>\n      </section>\n      <section>\n        <div className=\"container\">\n          <h1\n            css={{\n              textAlign: \"center\",\n              fontSize: \"4.8rem\",\n              margin: \"6rem 0\",\n            }}\n          >\n            สรุปผลการลงมติล่าสุด\n          </h1>\n          <Router>\n            {votelogs ? (\n              <VoteLogWrapper\n                path={currentPage === 1 ? \"/votelog\" : \"/votelog/page/:id\"}\n                data={votelogs}\n              />\n            ) : (\n              \"\"\n            )}\n          </Router>\n        </div>\n      </section>\n      <section css={{ padding: \"8rem 0\" }}>\n        <div className=\"container\">\n          <div\n            css={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              color: \"var(--cl-black)\",\n            }}\n          >\n            {currentPage !== 1 ? (\n              <Link\n                to={`/votelog${\n                  currentPage - 1 === 1 ? \"\" : `/page/${currentPage - 1}`\n                }`}\n                css={{\n                  ...paginationStyle,\n                  marginTop: \"0rem\",\n                }}\n              >\n                &lt;\n              </Link>\n            ) : (\n              \"\"\n            )}\n            {Array.from({ length: numPages }, (_, i) => {\n              const pageNumber = i + 1\n              if (pageNumber === currentPage) {\n                return (\n                  <span\n                    key={`page-number-${pageNumber}`}\n                    css={{\n                      ...paginationStyle,\n                      textDecoration: \"underline\",\n                    }}\n                  >\n                    {pageNumber}\n                  </span>\n                )\n              }\n              return (\n                <Link\n                  key={`page-number-${pageNumber}`}\n                  to={`/votelog${\n                    pageNumber === 1 ? \"\" : `/page/${pageNumber}`\n                  }`}\n                  css={paginationStyle}\n                >\n                  {pageNumber}\n                </Link>\n              )\n            })}\n            {currentPage !== numPages ? (\n              <Link\n                to={`/votelog${`/page/${currentPage + 1}`}`}\n                css={{\n                  ...paginationStyle,\n                  marginTop: \"0rem\",\n                }}\n              >\n                &gt;\n              </Link>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default VoteLogPage\n"],"sourceRoot":""}