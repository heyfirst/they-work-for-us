{"version":3,"file":"component---src-templates-votelog-template-js-07a4ec9592e869115a58.js","mappings":"oLAUA,IARqB,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,SAAaC,GAAY,YAC/C,OACE,uBAAOA,EAAP,CAAcC,OAAO,SAASC,IAAI,wBAC/BH,K,oBCLP,IAAII,EAAW,EAAQ,MAoBvBC,EAAOC,QAVP,SAAoBC,EAAYC,GAC9B,IAAIC,EAAS,GAMb,OALAL,EAASG,GAAY,SAASG,EAAOC,EAAOJ,GACtCC,EAAUE,EAAOC,EAAOJ,IAC1BE,EAAOG,KAAKF,MAGTD,I,iBCMTJ,EAAOC,QAZP,SAAuBO,EAAOL,EAAWM,EAAWC,GAIlD,IAHA,IAAIC,EAASH,EAAMG,OACfL,EAAQG,GAAaC,EAAY,GAAK,GAElCA,EAAYJ,MAAYA,EAAQK,GACtC,GAAIR,EAAUK,EAAMF,GAAQA,EAAOE,GACjC,OAAOF,EAGX,OAAQ,I,qBCpBV,IAAIM,EAAe,EAAQ,MACvBC,EAAc,EAAQ,MACtBC,EAAO,EAAQ,MAsBnBd,EAAOC,QAbP,SAAoBc,GAClB,OAAO,SAASb,EAAYC,EAAWM,GACrC,IAAIO,EAAWC,OAAOf,GACtB,IAAKW,EAAYX,GAAa,CAC5B,IAAIgB,EAAWN,EAAaT,EAAW,GACvCD,EAAaY,EAAKZ,GAClBC,EAAY,SAASgB,GAAO,OAAOD,EAASF,EAASG,GAAMA,EAAKH,IAElE,IAAIV,EAAQS,EAAcb,EAAYC,EAAWM,GACjD,OAAOH,GAAS,EAAIU,EAASE,EAAWhB,EAAWI,GAASA,QAASc,K,qBCpBzE,IAAIC,EAAc,EAAQ,MACtBC,EAAa,EAAQ,KACrBV,EAAe,EAAQ,MACvBW,EAAU,EAAQ,MAgDtBvB,EAAOC,QALP,SAAgBC,EAAYC,GAE1B,OADWoB,EAAQrB,GAAcmB,EAAcC,GACnCpB,EAAYU,EAAaT,EAAW,M,qBChDlD,IAuCIqB,EAvCa,EAAQ,KAuCdC,CAtCK,EAAQ,MAwCxBzB,EAAOC,QAAUuB,G,oBCzCjB,IAAIE,EAAgB,EAAQ,MACxBd,EAAe,EAAQ,MACvBe,EAAY,EAAQ,KAGpBC,EAAYC,KAAKC,IAiDrB9B,EAAOC,QAZP,SAAmBO,EAAOL,EAAWM,GACnC,IAAIE,EAAkB,MAATH,EAAgB,EAAIA,EAAMG,OACvC,IAAKA,EACH,OAAQ,EAEV,IAAIL,EAAqB,MAAbG,EAAoB,EAAIkB,EAAUlB,GAI9C,OAHIH,EAAQ,IACVA,EAAQsB,EAAUjB,EAASL,EAAO,IAE7BoB,EAAclB,EAAOI,EAAaT,EAAW,GAAIG,K,qBCnD1D,IAAIyB,EAAW,EAAQ,MAGnBC,EAAW,IAsCfhC,EAAOC,QAZP,SAAkBI,GAChB,OAAKA,GAGLA,EAAQ0B,EAAS1B,MACH2B,GAAY3B,KAAU,IA9BpB,uBA+BFA,EAAQ,GAAK,EAAI,GAGxBA,GAAUA,EAAQA,EAAQ,EAPd,IAAVA,EAAcA,EAAQ,I,oBC/BjC,IAAI4B,EAAW,EAAQ,MAmCvBjC,EAAOC,QAPP,SAAmBI,GACjB,IAAID,EAAS6B,EAAS5B,GAClB6B,EAAY9B,EAAS,EAEzB,OAAOA,GAAWA,EAAU8B,EAAY9B,EAAS8B,EAAY9B,EAAU","sources":["webpack://they-work-for-us/./src/components/externalLink.js","webpack://they-work-for-us/./node_modules/lodash/_baseFilter.js","webpack://they-work-for-us/./node_modules/lodash/_baseFindIndex.js","webpack://they-work-for-us/./node_modules/lodash/_createFind.js","webpack://they-work-for-us/./node_modules/lodash/filter.js","webpack://they-work-for-us/./node_modules/lodash/find.js","webpack://they-work-for-us/./node_modules/lodash/findIndex.js","webpack://they-work-for-us/./node_modules/lodash/toFinite.js","webpack://they-work-for-us/./node_modules/lodash/toInteger.js"],"sourcesContent":["import React from \"react\"\n\nconst ExternalLink = ({ children, ...props }) => {\n  return (\n    <a {...props} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </a>\n  )\n}\n\nexport default ExternalLink\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n"],"names":["children","props","target","rel","baseEach","module","exports","collection","predicate","result","value","index","push","array","fromIndex","fromRight","length","baseIteratee","isArrayLike","keys","findIndexFunc","iterable","Object","iteratee","key","undefined","arrayFilter","baseFilter","isArray","find","createFind","baseFindIndex","toInteger","nativeMax","Math","max","toNumber","INFINITY","toFinite","remainder"],"sourceRoot":""}