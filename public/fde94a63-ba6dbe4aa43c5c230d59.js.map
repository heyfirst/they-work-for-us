{"version":3,"sources":["webpack://they-work-for-us/./src/pages/representatives.js"],"names":["cssH1","fontSize","cssSection","paddingTop","paddingBottom","h2","textAlign","cssEngTitle","margin","cssPageP","cssBarChart","props","house","data","loadCategoryStats","mp_type","gender","age","education","occupation_group","asset","keyMembers","name","label","keyPos","nameParts","slug","peopleSlug","id","lastname","position","fields","votelogs","joinPeopleVotelog","pageStyles","background","title","className","css","style","dangerouslySetInnerHTML","__html","formatOrdinalNumber","x","key","marginTop","marginBottom","fontFamily","fontWeight","voteLog","isCompact"],"mappings":"+QAoBO,IA6GDA,EAAQ,CACZC,SAAU,QAGNC,EAAa,CACjBC,WADiB,OAEjBC,cAFiB,OAGjBC,GAAI,CACFJ,SADE,SAEFK,UAAW,WAITC,EAAc,CAClBN,SADkB,SAElBK,UAFkB,OAGlBE,OAAQ,qBAGJC,EAAN,GAEMC,EAAc,CAClBF,OAAQ,U,0OA+KV,UA5K4B,SAAAG,GAC1B,MAA2BA,EAA3B,KAAQC,EAAR,QAAkBC,GAAlB,oBAEA,GAOIC,QAPJ,GACEC,EADF,UAEEC,EAFF,SAGEC,EAHF,MAIEC,EAJF,YAKEC,EALF,mBAMEC,EANF,QASMC,EAAa,IACjB,CACE,CACEC,KADF,UAEEC,MAAO,aAET,CACED,KADF,uBAEEC,MAAO,wBAET,CACED,KADF,wBAEEC,MAAO,wBAET,CACED,KADF,oBAEEC,MAAO,kBAfX,KAiBM,cACJ,IAAKX,EAAMY,EAAX,MAAyB,OAAO,KAChC,IAAMC,EAAYb,EAAMY,EAANZ,uBAAlB,GACMc,GAAOC,QAAWF,OAAxB,MAIA,MAAO,CAAEG,GAAF,EAAMN,KAHAG,EAAb,GAGmBI,SAFFJ,gBAAjB,KAE6BK,SADZN,EAAjB,MACuCO,OAAQ,CAAEL,aAI/CM,GAAWC,QACfpB,EADgC,cAEhCA,EAFgC,kBAGhCA,EAHF,gBAMA,OACE,aAAQqB,WAAY,CAAEC,WAAY,aAChC,aAAKC,MAAM,6BACX,mBAASC,UAAU,YACjB,eAAKA,UAAU,SACb,eAAKA,UAAU,kBACb,cAAIC,KAAG,4BAAc9B,OAAQ,eAAtB,cACJI,EADH,gBACuBA,EAFzB,gBAIE,cAAI2B,MAAK,sBACP,gBACEC,wBAAyB,CACvBC,QAAQC,QAAoB9B,EAAD,kBAHjC,IAJF,4BAYE,cAAI2B,MAAK,qBAZX,UAaE,aAAGD,KAAG,0CAAoB1B,EAb5B,cAcE,cAAI0B,KAAG,0CAdT,kBAeE,YAfF,IAgBE,cAAIA,KAAG,0CAhBT,cAiBE,YAjBF,IAkBE,cAAIC,MAAK,qBAlBX,eAmBGlB,EAAA,KAAe,SAAAsB,GACd,OACE,eAAKN,UAAL,aAA4BO,IAAKD,EAAEf,KACjC,qBAAgBgB,IAAKD,EAAEf,IAF3B,UAOJ,eAAKS,UAAU,SACb,cACEE,MAAK,oBAEHM,UAFG,UAGHC,aAAc,UALpB,YAUE,cACEP,MAAK,oBAEHQ,WAFG,iBAGHC,WAAY,YAJhB,6BAO6BnC,gBAP7B,WAVF,QAmBE,eAAKyB,IAAG,IACN,eAAKC,MAAK,sBACR,aAAiB1B,KAAME,MAEzB,eAAKwB,MAAK,sBACR,aAAiB1B,KAAMG,MAEzB,eAAKuB,MAAK,sBACR,aAAiB1B,KAAMI,MAEzB,eAAKsB,MAAK,sBACR,aAAiB1B,KAAMK,MAEzB,eAAKqB,MAAK,sBACR,aAAiB1B,KAAMM,MAEzB,eAAKoB,MAAK,sBACR,aAAiB1B,KAAMO,SAOhCY,EAAA,UACC,mBAASM,KAAG,4BAAmBH,WAAY,oBAA/B,eACV,eAAKE,UAAU,cACb,cAAIC,KAAG,0CADT,oCAEE,eACEA,IAAG,GAQFN,EAAA,KAAa,gBAAGJ,EAAH,KAAOG,EAAP,SAAkBkB,GAAlB,iCACZ,qBACEC,WADF,EAEEN,IAFF,EAGEN,KAAG,gGAIHZ,KAAMK,EAAOL,MARH,UAvFxB,MAwGE,mBAASY,KAAG,4BAAmBH,WAAY,YAA/B,eACV,eAAKE,UAAU,cACb,oBACE,cACEC,IAAG,GAFP,yBAUE,YArHV","file":"fde94a63-ba6dbe4aa43c5c230d59.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {\n  loadCategoryStats,\n  joinPeopleVotelog,\n  peopleSlug,\n  formatOrdinalNumber,\n} from \"../utils\"\nimport StackedBarChart from \"../components/stackedBarChart\"\nimport { OfficialWebsite, InOfficeDate } from \"../components/profile\"\nimport PeopleCardMini from \"../components/peopleCardMini\"\nimport PartyGroupList from \"../components/partyGroupList\"\nimport VoteLogCard from \"../components/voteLogCard\"\n\nimport \"../styles/profile-book.css\"\n\nexport const query = graphql`\n  query {\n    house: partyYaml(party_type: { eq: \"สส\" }, is_active: { eq: true }) {\n      name\n      party_ordinal\n      description\n      established_date\n      dissolved_date\n      speaker\n      first_deputy_speaker\n      second_deputy_speaker\n      opposition_leader\n      website\n      facebook\n      twitter\n      is_active\n    }\n    allPeopleYaml(filter: { is_mp: { eq: true }, is_active: { eq: true } }) {\n      totalCount\n      edges {\n        node {\n          id\n        }\n      }\n    }\n    mp_type: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: mp_type) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    gender: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: gender) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    education: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: education) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    occupation_group: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: occupation_group) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    age: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          birthdate\n        }\n      }\n    }\n    asset: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          asset\n        }\n      }\n    }\n    allVotelogYaml(\n      filter: { is_active: { eq: true } }\n      sort: { fields: vote_date, order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          is_no_vote\n          no_vote_description\n          vote_date\n        }\n      }\n    }\n    allPeopleVoteYaml {\n      edges {\n        node {\n          id\n          votelog {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssPageP = {}\n\nconst cssBarChart = {\n  margin: \"1rem 0\",\n}\n\nconst RepresentativesPage = props => {\n  const { house, ...data } = props.data\n\n  const {\n    mp_type,\n    gender,\n    age,\n    education,\n    occupation_group,\n    asset,\n  } = loadCategoryStats(data)\n\n  const keyMembers = _.compact(\n    [\n      {\n        name: \"speaker\",\n        label: \"ประธานสภา\",\n      },\n      {\n        name: \"first_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 1\",\n      },\n      {\n        name: \"second_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 2\",\n      },\n      {\n        name: \"opposition_leader\",\n        label: \"ผู้นำฝ่ายค้าน\",\n      },\n    ].map((keyPos, id) => {\n      if (!house[keyPos.name]) return null\n      const nameParts = house[keyPos.name].split(\" \").slice(1)\n      const slug = peopleSlug(nameParts.join(\" \"))\n      const name = nameParts[0]\n      const lastname = nameParts.slice(1).join(\" \")\n      const position = keyPos.label\n      return { id, name, lastname, position, fields: { slug } }\n    })\n  )\n\n  const votelogs = joinPeopleVotelog(\n    data.allPeopleYaml,\n    data.allPeopleVoteYaml,\n    data.allVotelogYaml\n  )\n\n  return (\n    <Layout pageStyles={{ background: \"#eeeeee\" }}>\n      <SEO title=\"สมาชิกสภาผู้แทนราษฎรไทย\" />\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>\n              {house.name} ชุดที่ {house.party_ordinal}\n            </h1>\n            <h2 style={{ ...cssEngTitle }}>\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: formatOrdinalNumber(house.party_ordinal),\n                }}\n              />{\" \"}\n              House of Representative\n            </h2>\n            <h2 style={{ ...cssEngTitle }}>About</h2>\n            <p css={{ ...cssPageP }}>{house.description}</p>\n            <h2 css={{ ...cssEngTitle }}>Official Link</h2>\n            <OfficialWebsite {...house}></OfficialWebsite>\n            <h2 css={{ ...cssEngTitle }}>In Office</h2>\n            <InOfficeDate {...house}></InOfficeDate>\n            <h2 style={{ ...cssEngTitle }}>Key Members</h2>\n            {keyMembers.map(x => {\n              return (\n                <div className=\"peopleCard\" key={x.id}>\n                  <PeopleCardMini key={x.id} {...x} />\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"page\">\n            <h2\n              style={{\n                ...cssEngTitle,\n                marginTop: \"11.1rem\",\n                marginBottom: \"0rem\",\n              }}\n            >\n              Members\n            </h2>\n            <h2\n              style={{\n                ...cssEngTitle,\n                fontFamily: \"var(--ff-text)\",\n                fontWeight: \"normal\",\n              }}\n            >\n              สมาชิกสภาผู้แทนราษฏรจำนวน {data.allPeopleYaml.totalCount} คน\n            </h2>\n            <div css={{ width: \"100%\" }}>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={mp_type}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={gender}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={age}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={education}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={occupation_group}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={asset}></StackedBarChart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {votelogs.length > 0 ? (\n        <section css={{ ...cssSection, background: \"var(--cl-white)\" }}>\n          <div className=\"container\">\n            <h2 css={{ ...cssH1 }}>การลงมติล่าสุดของสภาผู้แทนราษฎร</h2>\n            <div\n              css={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"flex-start\",\n                flexWrap: \"wrap\",\n                marginTop: \"6rem\",\n              }}\n            >\n              {votelogs.map(({ id, fields, ...voteLog }) => (\n                <VoteLogCard\n                  isCompact\n                  key={id}\n                  css={{\n                    width: `calc((var(--container-width) - 4rem) / 2)`,\n                    margin: \"0 1rem 2rem 1rem\",\n                  }}\n                  slug={fields.slug}\n                  {...voteLog}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n\n      <section css={{ ...cssSection, background: \"#eeeeee\" }}>\n        <div className=\"container\">\n          <div>\n            <h3\n              css={{\n                fontSize: \"4.5rem\",\n                textAlign: \"center\",\n                marginTop: \"4rem\",\n              }}\n            >\n              สำรวจตามพรรคการเมือง\n            </h3>\n            <PartyGroupList />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default RepresentativesPage\n"],"sourceRoot":""}