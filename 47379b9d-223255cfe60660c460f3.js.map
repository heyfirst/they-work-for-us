{"version":3,"file":"47379b9d-223255cfe60660c460f3.js","mappings":"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","sources":["webpack://they-work-for-us/./src/templates/votelog-template.js"],"sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { css } from \"@emotion/react\"\nimport _ from \"lodash\"\n\nimport ExternalLink from \"../components/externalLink\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport VoterList from \"../components/voterList\"\nimport Waffle from \"../components/waffle\"\nimport VoteLogLegend from \"../components/voteLogLegend\"\nimport { media } from \"../styles\"\n\nexport const query = graphql`\n  query($slug: String!) {\n    votelogYaml(fields: { slug: { eq: $slug } }) {\n      id\n      title\n      legal_title\n      vote_date(formatString: \"DD.M.YYYY\")\n      description_th\n      reference\n      document {\n        title\n        link\n      }\n      meeting\n      passed\n      approve\n      disprove\n      abstained\n      absent\n      total_voter\n      special\n      total_people\n    }\n    voteRecordIcon: file(\n      relativePath: { eq: \"images/icons/votelog/votelog.png\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(height: 30, layout: FIXED)\n      }\n    }\n    downloadIcon: file(\n      relativePath: { eq: \"images/icons/download/download.png\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(height: 20, layout: FIXED)\n      }\n    }\n    allPeopleVoteYaml {\n      nodes {\n        id\n        title\n        name\n        lastname\n        votelog {\n          key\n          value\n        }\n      }\n    }\n    allPeopleYaml {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        is_mp\n        is_senator\n        is_cabinet\n        mp_type\n        mp_list\n        mp_province\n        mp_zone\n        party\n      }\n    }\n  }\n`\n\nconst cssSection = {\n  borderBottom: \"0.5rem solid black\",\n  paddingTop: \"3rem\",\n  paddingBottom: \"3rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n  \".dot\": {\n    margin: \"0 1rem\",\n    height: \"2rem\",\n    width: \"2rem\",\n    display: \"inline-block\",\n    borderRadius: \"50%\",\n  },\n}\n\nconst filterVote = (combined, key, value) =>\n  _.filter(combined, o => {\n    return (\n      _.get(\n        _.find(o.votelog || [], p => p.key === key),\n        \"value\"\n      ) === value\n    )\n  })\n\nconst VotelogPage = ({\n  data: {\n    votelogYaml,\n    voteRecordIcon,\n    downloadIcon,\n    allPeopleVoteYaml,\n    allPeopleYaml,\n  },\n}) => {\n  const { passed, total_voter, total_people } = votelogYaml\n\n  let combined = []\n  allPeopleVoteYaml.nodes.forEach(votelog => {\n    const matched = _.find(allPeopleYaml.nodes, [\"id\", votelog.id])\n    combined.push({ ...votelog, ...matched })\n  })\n\n  const approve = filterVote(combined, votelogYaml.id, \"1\")\n  const disprove = filterVote(combined, votelogYaml.id, \"2\")\n  const abstained = filterVote(combined, votelogYaml.id, \"3\")\n  const absent = filterVote(combined, votelogYaml.id, \"4\")\n  const special = filterVote(combined, votelogYaml.id, \"\")\n\n  return (\n    <Layout\n      pageStyles={{\n        background: \"#000\",\n      }}\n    >\n      <Seo title={votelogYaml.title} imageUrl=\"/seo/share/votelog.png\" />\n\n      <div\n        style={{\n          background: \"#fff\",\n          borderRadius: \"10px\",\n          padding: \"3rem\",\n          margin: \"5rem auto\",\n          maxWidth: \"min(calc(100% - 2rem), 920px)\",\n        }}\n      >\n        <section\n          css={{\n            ...cssSection,\n            paddingBottom: \"1rem !important\",\n            span: {\n              fontSize: \"3rem\",\n            },\n          }}\n        >\n          <div className=\"container\">\n            <span>\n              <GatsbyImage\n                image={voteRecordIcon.childImageSharp.gatsbyImageData}\n                alt=\"\"\n                aria-hidden=\"true\"\n                style={{\n                  verticalAlign: \"middle\",\n                  display: \"inline-block\",\n                  marginRight: \"5px\",\n                }}\n              />\n              {votelogYaml.meeting}\n              <span\n                css={css`\n                  float: right;\n                `}\n              >\n                {votelogYaml.vote_date}\n              </span>\n            </span>\n          </div>\n        </section>\n        <section\n          css={{\n            ...cssSection,\n            paddingBottom: \"1rem !important\",\n            span: {\n              fontSize: \"3rem\",\n            },\n          }}\n        >\n          <div\n            className=\"container\"\n            css={css`\n              margin-bottom: 3rem;\n            `}\n          >\n            {\" \"}\n            <h1\n              css={{\n                marginTop: 0,\n              }}\n            >{`${votelogYaml.title}`}</h1>\n            <p\n              css={css`\n                font-size: 2rem;\n              `}\n            >\n              {votelogYaml.legal_title}\n            </p>\n          </div>\n          <div\n            css={{\n              [media(767)]: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              },\n            }}\n          >\n            <span>\n              สถานะ{\" \"}\n              {passed ? (\n                <span\n                  css={css`\n                    color: var(--cl-vote-yes);\n                  `}\n                >\n                  <span\n                    className=\"dot\"\n                    css={{\n                      backgroundColor: \"var(--cl-vote-yes)\",\n                    }}\n                  ></span>\n                  ผ่าน\n                </span>\n              ) : (\n                <span\n                  css={css`\n                    color: var(--cl-vote-no);\n                  `}\n                >\n                  <span\n                    className=\"dot\"\n                    css={{\n                      backgroundColor: \"var(--cl-vote-no)\",\n                    }}\n                  ></span>\n                  ไม่ผ่าน\n                </span>\n              )}\n            </span>\n\n            <span\n              css={{\n                display: \"block\",\n              }}\n            >\n              ผู้เข้าร่วมประชุม {total_voter} คน\n              <span\n                css={{\n                  color: \"#C5C5C5\",\n                }}\n              >\n                /{total_people.toLocaleString()}\n              </span>{\" \"}\n              คน\n            </span>\n          </div>\n        </section>\n        <section\n          css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            ...cssSection,\n          }}\n        >\n          <div css={{ marginBottom: \"4rem\" }}>\n            <VoteLogLegend {...votelogYaml} />\n          </div>\n          <Waffle\n            data={[\n              approve.map(p => ({ node: p })),\n              disprove.map(p => ({ node: p })),\n              abstained.map(p => ({ node: p })),\n              absent.map(p => ({ node: p })),\n              special.map(p => ({ node: p })),\n            ]}\n            colors={[\n              `var(--cl-vote-yes)`,\n              `var(--cl-vote-no)`,\n              `var(--cl-vote-abstained)`,\n              `var(--cl-vote-absent)`,\n              `var(--cl-vote-absent)`,\n            ]}\n            borderColors={[\n              `var(--cl-vote-yes)`,\n              `var(--cl-vote-no)`,\n              `var(--cl-vote-abstained)`,\n              `var(--cl-black)`,\n              `var(--cl-vote-absent)`,\n            ]}\n            crossLast={true}\n          />\n        </section>\n        <section\n          css={{\n            ...cssSection,\n            fontSize: \"2rem\",\n          }}\n        >\n          <h1>เนื้อหา</h1>\n          <p>{votelogYaml.description_th}</p>\n          <p\n            css={css`\n              font-weight: bold;\n              padding-top: 2em;\n            `}\n          >\n            อ้างอิง\n          </p>\n          <ExternalLink\n            href={votelogYaml.reference}\n            css={css`\n              :hover {\n                color: var(--cl-black);\n              }\n            `}\n          >\n            <p>{votelogYaml.reference}</p>\n          </ExternalLink>\n          <p\n            css={css`\n              font-weight: bold;\n              padding-top: 2em;\n            `}\n          >\n            เอกสารการลงมติ\n          </p>\n          <button\n            css={css`\n              display: flex;\n              flex-flow: row wrap;\n              padding: 0;\n              border: none;\n              background: none;\n              width: 100%;\n              border-radius: 5px;\n              pointer-events: none;\n              &:focus {\n                outline: none;\n              }\n              text-align: left;\n            `}\n            type=\"button\"\n          >\n            {votelogYaml.document\n              .filter(doc => doc.link)\n              .map(doc => (\n                <ExternalLink\n                  key={doc.link}\n                  href={doc.link}\n                  css={css`\n                    color: var(--cl-black);\n                    :hover {\n                      color: var(--cl-black);\n                    }\n                  `}\n                >\n                  <span\n                    css={css`\n                      font-size: 2.4rem;\n                      font-family: var(--ff-title);\n                      line-height: 3rem;\n                      cursor: pointer;\n                      border-radius: 5px;\n                      padding: 1rem 1rem;\n                      margin-right: 1rem;\n                      margin-bottom: 1rem;\n                      display: block;\n                      background-color: var(--cl-pink);\n                      pointer-events: auto;\n                    `}\n                  >\n                    <GatsbyImage\n                      image={downloadIcon.childImageSharp.gatsbyImageData}\n                      alt=\"\"\n                      aria-hidden=\"true\"\n                      css={{ marginRight: \"1rem\", display: \"inline-block\" }}\n                    />\n                    {doc.title || \"เอกสาร\"}\n                  </span>\n                </ExternalLink>\n              ))}\n          </button>\n        </section>\n        <section>\n          <div className=\"container\">\n            <h1>บันทึกคะแนนเสียง</h1>\n            <VoterList data={[approve, disprove, abstained, absent]} />\n          </div>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport default VotelogPage\n"],"names":["cssSection","borderBottom","paddingTop","paddingBottom","h2","fontSize","textAlign","margin","height","width","display","borderRadius","filterVote","combined","key","value","o","votelog","p","data","votelogYaml","voteRecordIcon","downloadIcon","allPeopleVoteYaml","allPeopleYaml","passed","total_voter","total_people","nodes","forEach","matched","id","push","approve","disprove","abstained","absent","special","pageStyles","background","title","imageUrl","style","padding","maxWidth","css","span","className","G","image","childImageSharp","gatsbyImageData","alt","verticalAlign","marginRight","meeting","vote_date","legal_title","media","justifyContent","toLocaleString","alignItems","flexDirection","map","node","colors","borderColors","crossLast","description_th","href","reference","type","document","filter","doc","link"],"sourceRoot":""}